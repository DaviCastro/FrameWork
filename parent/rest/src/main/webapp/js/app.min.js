var App = Ember.Application.create({
	LOG_TRANSITIONS: true,
    LOG_BINDINGS: true,
    LOG_VIEW_LOOKUPS: true,
    LOG_STACKTRACE_ON_DEPRECATION: true,
    LOG_VERSION: true,
    debugMode: true
    
});
App.Router.map(function(){
	this.resource('albums',function(){
		this.resource('album',{ path: ':id' },function(){
			this.route('edit');
		});
		this.route('create');
	});
	
	this.resource('home',{path:'/'});
});


App.ApplicationAdapter = DS.RESTAdapter.extend({
	namespace: 'rest/rest'
});
App.Acao = Ember.Object.extend({
	name: null,
	action: null
});
App.Album = DS.Model.extend({
	name: DS.attr('string'),
	description: DS.attr('string')
});
App.AlbumsCreateRoute = Ember.Route.extend({
	model: function(){
		//retorna um novo objeto
		return Em.Object.create();
	},
	
	//Fala em qual template essa rota sera renderizada
	renderTemplate:function(){
		this.render('album.edit',{
			controller:'AlbumsCreate'
		});
		
	}
});
App.AlbumEditRoute = Ember.Route.extend({
	model:function(){
		return this.modelFor("album");
	}
});
App.AlbumRoute = Ember.Route.extend({
	model:function(params){
			return this.store.find('album',params.id);
	}
});
App.AlbumsRoute = Ember.Route.extend({
	model : function() {
		return this.store.find("album");		
	}
});
App.AlbumController = Ember.ObjectController.extend({
	
	arrayActions : [Em.Object.create({name: 'Edit'},{action:'edit'}),Em.Object.create({name: 'Delete'},{action:'delete'})],
	
	actions : {
		
		panelActions:function(action){
			this.send(action);
		},	
			edit:function(){
				this.transitionToRoute('album.edit'); 
			},
			confirmDelete:function(){
				this.get('model').deleteRecord();
				this.get('model').save();
				this.transitionToRoute('albums');
			}

	}
});
App.AlbumEditController = Ember.ObjectController.extend({
	
	arrayActions : [Em.Object.create({name: 'Save'},{action:'save'}),Em.Object.create({name: 'Cancel'},{action:'cancel'})],
	actions:{
		panelActions:function(action){
			this.send(action);
		},	
		save:function(){
			var album = this.get("model");
				album.save();
				this.transitionToRoute('album',album);
		},
		cancel:function(){
			var album = this.get("model");
			this.transitionToRoute('album',album);
		}
	}
	
});
App.AlbumsController = Ember.ArrayController.extend({
	sortProperties : [ 'name' ],
	sortAscending : true,

	albumContador : function() {
		return this.get('model.length');
	}.property('@each'),

	arrayActions : [ Em.Object.create({
		name : 'New'
	}, {
		action : 'newAlbum'
	}) ],

	actions : {
		panelActions : function(obj) {
			this.send(obj);
		},

		newAlbum : function() {
			this.transitionToRoute('albums.create');
		}
	}

});
App.AlbumsCreateController = Ember.ObjectController.extend({
	content: {},
	arrayActions : [Em.Object.create({name: 'Save'},{action:'save'})],
	
	actions:{
		
		panelActions:function(action){
			this.send(action);
		},	
			
		save:function(){
			var album = this.store.createRecord('album', this.get('model'));
			album.save();
			this.transitionToRoute('album',album);		
		},
		
	}
	
});
App.BasicObjectController = Ember.ObjectController.extend({
	
	acoes:Ember.A()
	
});
App.PanelPrimaryComponent = Ember.Component.extend({
	
	 setupIds: function(){
	        this.setProperties({ 
	        	collapseId: "collapse" + this.get('customId'),
	        	hrefCollapseId:"#" + this.get('customId'),
	        	myModalId: "myModal" + this.get('customId')
	        });
	    }.on("init"),
	actions : {
		panelActions : function(obj) {
			
			if(obj.action==="delete") this.send('delete');
			else
			 this.sendAction('panelActions',obj.action);
		},
		delete:function(){
			var jqueryModalId = "#"+ this.get('myModalId');
			$(jqueryModalId).modal('toggle')
		},
		cancelDelete:function(){
			this.set('deleteMode',false);				
		},
		confirmDelete:function(){
			$(".close").click();
			this.sendAction('panelActions','confirmDelete');
		},
		
		collapse:function(){
			var jQueryCollpaseId= "#"+this.get('collapseId');
			if($(jQueryCollpaseId).hasClass("glyphicon-collapse-down")){
				$(jQueryCollpaseId).removeClass("glyphicon-collapse-down").addClass("glyphicon-collapse-up")
			}
			else{
				$(jQueryCollpaseId).removeClass("glyphicon-collapse-up").addClass("glyphicon-collapse-down")
			}
		}
	}
});
Ember.LinkView.reopen({
	attributeBindings: ['data-toggle','data-placement','title']
});
App.MyText = Ember.TextField.extend({
attributeBindings: ['placeholder', 'disabled', 'maxlength'],
});