var App = Ember.Application.create({
	LOG_TRANSITIONS: true,
    LOG_BINDINGS: true,
    LOG_VIEW_LOOKUPS: true,
    LOG_STACKTRACE_ON_DEPRECATION: true,
    LOG_VERSION: true,
    debugMode: true
    
});
App.Router.map(function(){
	this.resource('albums',function(){
		this.resource('album',{ path: ':id' },function(){
			this.route('edit');
		});
		this.route('create');
	});
	
	this.resource('home',{path:'/'});
});


App.ApplicationAdapter = DS.RESTAdapter.extend({
	namespace: 'rest/rest'
});
App.Acao = Ember.Object.extend({
	nome: null,
	acao: null
});
App.Album = DS.Model.extend({
	nome: DS.attr('string'),
	descricao: DS.attr('string')
});
App.AlbumsCreateRoute = Ember.Route.extend({
	model: function(){
		//retorna um novo objeto
		return Em.Object.create();
	},
	
	//Fala em qual template essa rota sera renderizada
	renderTemplate:function(){
		this.render('album.edit',{
			controller:'AlbumsCreate'
		});
		
	}
});
App.AlbumEditRoute = Ember.Route.extend({
	model:function(){
		return this.modelFor("album");
	}
});
App.AlbumRoute = Ember.Route.extend({
	model:function(params){
			return this.store.find('album',params.id);
	}
});
App.AlbumsRoute = Ember.Route.extend({
	model : function() {
		return this.store.find("album");		
	}
});
App.AlbumController = Ember.ObjectController.extend({
	
	criarAcoes : [Em.Object.create({nome: 'Editar'},{acao:'edit'}),Em.Object.create({nome: 'Deletar'},{acao:'delete'})],
	
	actions : {
		
		panelActions:function(action){
			this.send(action);
		},
		
			edit:function(){
				this.transitionToRoute('album.edit'); 
			},
			
			delete:function(){
				this.toggleProperty('deleteMode');
			},
			
			confirmDelete:function(){
				$(".close").click();
				this.get('model').deleteRecord();
				this.get('model').save();
				this.transitionToRoute('albums');
			},
			cancelDelete:function(){
				this.set('deleteMode',false);
				
			}

	}
});
App.AlbumEditController = Ember.ObjectController.extend({
	actions:{
		salvar:function(){
			var album = this.get("model");
				album.save();
				this.transitionToRoute('album',album);
		}
	}
	
});
App.AlbumsController = Ember.ArrayController.extend({
sortProperties:['nome'],
sortAscending:true,

albumContador:function(){
	return this.get('model.length');
}.property('@each')

});
App.AlbumsCreateController = Ember.ObjectController.extend({
	content: {},
	actions:{
		salvar:function(){
			var album = this.store.createRecord('album', this.get('model'));
			album.save();
			this.transitionToRoute('album',album);
			
		},
		
	}
	
});
App.BasicObjectController = Ember.ObjectController.extend({
	
	acoes:Ember.A()
	
});
App.PanelPrimaryComponent = Ember.Component.extend({	
	actions : {
		panelActions : function(obj) {
			 this.sendAction('panelActions',obj.acao);
		}
	}

});
Ember.LinkView.reopen({
	attributeBindings: ['data-toggle','data-placement','title']
});
App.MyText = Ember.TextField.extend({
attributeBindings: ['placeholder', 'disabled', 'maxlength'],
});